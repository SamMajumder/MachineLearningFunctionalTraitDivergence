Missing_values <-Sunflower_traits %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
ggplot(data = Missing_values,
aes(x=reorder(key,num.missing), y = num.missing, fill = key)) +
geom_bar(stat = "identity") +
labs(x= "Features", y= "Total number of missing values") +
coord_flip() +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Missing Values in the dataset") +
theme(text = element_text(size = 10))
Missing_percent <- Sunflower_traits %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100) %>%
mutate(Type = case_when(isna == "FALSE" ~ "Not Missing",
isna == "TRUE" ~ "Missing"))
ggplot(Missing_percent, aes(fill=Type, y=pct, x=key)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Variable", y = "Percent Missing") +
coord_flip() +
ggtitle("Percent Missing Value") +
theme(text = element_text(size = 10))
ggsave("C:/Users/samba/Documents/Chapter_1_Analysis/Figures/Figure S1.svg",
dpi=300)
Sunflower_traits$Species <- factor(Sunflower_traits$Species)
Sunflower_traits$Pop <- factor(Sunflower_traits$Pop)
Sunflower_traits$ID <- factor(Sunflower_traits$ID)
Sunflower_traits <- Sunflower_traits %>%
mutate_if(is.character,as.numeric)
s <- createDataPartition(y=Sunflower_traits$Species, p=0.70, list = F)
train <- Sunflower_traits[s,]
test <- Sunflower_traits[-s,]
pop_train <- data.frame(Pop = train$Pop)
ID_train <- data.frame(ID = train$ID)
train <- train %>% dplyr::select(-c(Pop,ID))
test <- test %>% dplyr::select(-c(Pop,ID))
### Now impute using random forest ###
set.seed(1234)
train_imputed <- rfImpute(Species~.,train)
set.seed(1234)
test_imputed <- rfImpute(Species~.,test)
here("Datasets and Tables")
write.csv(train_imputed,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/train_imputed.csv",
row.names = FALSE)
write.csv(test_imputed,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/test_imputed.csv",
row.names=FALSE)
View(ID_train)
Sunflower_train <- data.frame(Pop = pop_train$Pop,
ID = ID_train$ID,
train_imputed)
write.csv(Sunflower_train,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/Sunflower_train.csv",
row.names = FALSE)
rm(list = ls())
####
rm(list = ls())
packages <- list("here","tidyverse","naniar","ggplot2","randomForest","caret","readxl")
lapply(packages, require,character.only=T)
Sunflower_traits <- read_excel(here("Datasets and Tables","CombinedTraitDataset_ForSam_12.20.20.xlsx"))
colnames(Sunflower_traits)
#### removing the columns which we don't need ###
Sunflower_traits <- Sunflower_traits %>%
dplyr::select(-c(Year,Block,Number))
### now renaming the columns ###
New_names <- c("Species","Pop","ID","SPAD","L_Aarea","L_Amass","L_Con","L_Ci",
"L_iWUE","L_NightRespArea","L_NightRespmass","LA",
"L_Peri","L_Circ","LS","LMA","L_FreshMass","L_DryMass",
"LWC","LDMC","L_MidribT","L_LaminaT","L_Tough","L_life",
"LN","LD15C","LPNUE","LC","LD13C","LCN","LP","Leaf_N_P",
"L_VeinD","L_T_activity","LTD","L_LipidC","L_AshC","WPTB",
"WPBMF","WPSMF","WPLMF","WPRMF","WPFB","WPFF","FPFM","FDFM",
"FRFM","FTFM","FPDM","FDDM","FRDM","FTDM","FPWC","FDWC","FRWC",
"FTWC","P_D","P_T","D_T","R_T","FRL","FRW","FDD","FDC","FTD",
"FTC","FTA","FDA","FPA","FRN","FPD","FAIR","FPAF","FDAF")
Old_names <- colnames(Sunflower_traits)
#### renaming the names of the dataframe #####
Sunflower_traits <- Sunflower_traits %>% rename_at(vars(Old_names), ~ New_names)
### First changing H. agrestis, H. argophyllus to H_agrestis, H_argophyllus
Sunflower_traits$Species <- gsub(". ","_",Sunflower_traits$Species)
### converting every ".", into NA in the trait columns
Sunflower_traits[Sunflower_traits == "."] <- NA
###
total_cells <- prod(dim(Sunflower_traits %>% select(-Species)))
missing_cells <- sum(is.na(Sunflower_traits %>% select(-Species)))
# calculating percentage of missing values
percentage_missing <- (missing_cells * 100 )/(total_cells)
percentage_missing
#### Missing values in the data
Missing_values <-Sunflower_traits %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
## Now make a plot ## number of missing values for specific traits ###
ggplot(data = Missing_values,
aes(x=reorder(key,num.missing), y = num.missing, fill = key)) +
geom_bar(stat = "identity") +
labs(x= "Features", y= "Total number of missing values") +
coord_flip() +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Missing Values in the dataset") +
theme(text = element_text(size = 10))
### Percent missing for each trait ###
Missing_percent <- Sunflower_traits %>%
gather(key = "key", value = "val") %>%
mutate(isna = is.na(val)) %>%
group_by(key) %>%
mutate(total = n()) %>%
group_by(key, total, isna) %>%
summarise(num.isna = n()) %>%
mutate(pct = num.isna / total * 100) %>%
mutate(Type = case_when(isna == "FALSE" ~ "Not Missing",
isna == "TRUE" ~ "Missing"))
ggplot(Missing_percent, aes(fill=Type, y=pct, x=key)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Variable", y = "Percent Missing") +
coord_flip() +
ggtitle("Percent Missing Value") +
theme(text = element_text(size = 10))
here("Figures")
ggsave("C:/Users/samba/Documents/Chapter_1_Analysis/Figures/Figure S1.svg",
dpi=300)
##### Converting the Species and Pop column to a factor ###
Sunflower_traits$Species <- factor(Sunflower_traits$Species)
Sunflower_traits$Pop <- factor(Sunflower_traits$Pop)
Sunflower_traits$ID <- factor(Sunflower_traits$ID)
### converting all other columns into a numeric column ##
Sunflower_traits <- Sunflower_traits %>%
mutate_if(is.character,as.numeric)
### Divide the dataset into a training and test set ###
s <- createDataPartition(y=Sunflower_traits$Species, p=0.70, list = F)
train <- Sunflower_traits[s,]
test <- Sunflower_traits[-s,]
#### removing the Pop column from both train and test putting it in a different dataframe ###
pop_train <- data.frame(Pop = train$Pop)
ID_train <- data.frame(ID = train$ID)
train <- train %>% dplyr::select(-c(Pop,ID))
test <- test %>% dplyr::select(-c(Pop,ID))
### Now impute using random forest ###
set.seed(1234)
train_imputed <- rfImpute(Species~.,train)
set.seed(1234)
test_imputed <- rfImpute(Species~.,test)
###### writing this out ####
here("Datasets and Tables")
write.csv(train_imputed,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/train_imputed.csv",
row.names = FALSE)
write.csv(test_imputed,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/test_imputed.csv",
row.names=FALSE)
## adding the pop column to the training data and calling it Sunflower_train###
Sunflower_train <- data.frame(Pop = pop_train$Pop,
ID = ID_train$ID,
train_imputed)
### write this dataframe out to analyze variance partitioning ####
write.csv(Sunflower_train,"C:/Users/samba/Documents/Chapter_1_Analysis/Datasets and Tables/Sunflower_train.csv",
row.names = FALSE)
rm(list = ls())
packages <- list("tidyverse","ggplot2","here","lme4","svglite")
lapply(packages, require,character.only=T)
Sunflower_train <- read_csv(here("Datasets and Tables","Sunflower_train.csv"))
Sunflower_train <- Sunflower_train %>%
mutate_if(is.character,as.factor)
View(Sunflower_train)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop/ID),data = Sunflower_train)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
LTD_mixed_model_Pop <- lmer(LTD~ 1|Pop/ID,data = Sunflower_train)
summary(LTD_mixed_model_Pop)
summary(LTD_mixed_model)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
LTD_mixed_model_Pop <- lmer(LTD~ 1|Pop/ID,data = Sunflower_train)
summary(LTD_mixed_model_Pop)
LTD_mixed_model_Pop <- lmer(LTD~ 1|Species/Pop/ID,data = Sunflower_train)
summary(LTD_mixed_model)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
Residual_LTD <- Species_Ltd_var - Pop_Ltd_var
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
Residual_LTD <- 1-(Species_Ltd_var + Pop_Ltd_var)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
View(Sunflower_train)
rm(list = ls())
rm(list = ls())
packages <- list("tidyverse","ggplot2","here","lme4","svglite")
lapply(packages, require,character.only=T)
Sunflower_train <- read_csv(here("Datasets and Tables","Sunflower_train.csv"))
Sunflower_train <- Sunflower_train %>%
mutate_if(is.character,as.factor)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
L_Circ_mixed_model <- lmer(L_Circ ~ (1|Species/Pop),data = Sunflower_train)
summary(L_Circ_mixed_model)
summary(LTD_mixed_model)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
rm(list = ls())
packages <- list("tidyverse","ggplot2","here","lme4","svglite")
lapply(packages, require,character.only=T)
Sunflower_train <- read_csv(here("Datasets and Tables","Sunflower_train.csv"))
Sunflower_train <- Sunflower_train %>%
mutate_if(is.character,as.factor)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
Pop_Ltd_var <- (0/all_var_LTD) * 100
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
Residual_Ltd <- (2475/all_var_LTD) * 100
L_Circ_mixed_model <- lmer(L_Circ ~ (1|Species/Pop),data = Sunflower_train)
summary(L_Circ_mixed_model)
all_var_L_Circ <- 0.0007089 + 0.0212218 + 0.0033679
Pop_L_Circ_var <- (0.0007089/all_var_L_Circ) * 100
Species_L_Circ_var <- (0.0212218/all_var_L_Circ) * 100
Residual_L_Circ <- (0.0033679/all_var_L_Circ) * 100
L_Area_mixed_model <- lmer(LA~(1|Species/Pop),data = Sunflower_train)
summary(L_Area_mixed_model)
all_var_L_Area <- 84.42 + 727.19 + 412.04
Pop_L_Area_var <- (84.42/all_var_L_Area) * 100
Species_L_Area_var <- (727.19/all_var_L_Area) * 100
Residual_L_Area <- (412.04/all_var_L_Area) * 100
L_SPAD_mixed_model <- lmer(SPAD~(1|Species/Pop),data = Sunflower_train)
summary(L_SPAD_mixed_model)
L_Aarea_mixed_model <- lmer(L_Aarea~(1|Species/Pop),data = Sunflower_train)
summary(L_Aarea_mixed_model)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop + 1|ID),data = Sunflower_train)
View(Sunflower_train)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop/ID),data = Sunflower_train)
summary(LTD_mixed_model)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop/ID),data = Sunflower_train)
L_Aarea_mixed_model <- lmer(L_Aarea~(1|Species/Pop),data = Sunflower_train)
summary(L_Aarea_mixed_model)
L_Amass_mixed_model <- lmer(L_Amass~(1|Species/Pop),data = Sunflower_train)
summary(L_Amass_mixed_model)
L_Amass_mixed_model <- lmer(L_Amass~(1|Species/Pop),data = Sunflower_train)
summary(L_Amass_mixed_model)
all_var_Amass <- 0.00 + 25136 + 22194
Pop_Amass_var <- (0.00/all_var_L_Amass) * 100
Species_Amass_var <- (25136/all_var_L_Amass) * 100
Residual_Amass <- (22194/all_var_Amass) * 100
L_Amass_mixed_model <- lmer(L_Amass~(1|Species/Pop),data = Sunflower_train)
summary(L_Amass_mixed_model)
all_var_Amass <- 0.00 + 25136 + 22194
Pop_Amass_var <- (0.00/all_var_L_Amass) * 100
Pop_Amass_var <- (0.00/all_var_L_Amass) * 100
all_var_Amass <- 0.00 + 25136 + 22194
Pop_Amass_var <- (0.00/all_var_Amass) * 100
Species_Amass_var <- (25136/all_var_Amass) * 100
Residual_Amass <- (22194/all_var_Amass) * 100
L_Con_mixed_model <- lmer(L_Con~(1|Species/Pop),data = Sunflower_train)
summary(L_Con_mixed_model)
all_var_LCon <- 0.00 + 0.11540 + 0.08629
Pop_Amass_var <- (0.00/all_var_LCon ) * 100
Species_Amass_var <- (0.11540/all_var_LCon ) * 100
Residual_Amass <- (0.08629/all_var_LCon ) * 100
L_iWUE_mixed_model <- lmer(L_iWUE~(1|Species/Pop),data = Sunflower_train)
summary(L_iWUE_mixed_model)
L_iWUE_mixed_model <- lmer(L_iWUE~(1|Species/Pop),data = Sunflower_train)
summary(L_iWUE_mixed_model)
L_Ci_mixed_model <- lmer(L_Ci~(1|Species/Pop),data = Sunflower_train)
summary(L_Ci_mixed_model)
L_iWUE_mixed_model <- lmer(L_iWUE~(1|Species/Pop),data = Sunflower_train)
summary(L_iWUE_mixed_model)
L_iWUE_mixed_model <- lmer(L_iWUE~(1|Species/Pop),data = Sunflower_train)
summary(L_iWUE_mixed_model)
all_var_iWUE <- 0.1617 + 17.8804 + 46.1146
Pop_iWUE_var <- (0.1617/all_var_iWUE) * 100
Species_iWUE_var <- (17.8804/all_var_iWUE) * 100
Residual_iWUE <- (46.1146/all_var_iWUE) * 100
L_NightRespArea_mixed_model <- lmer(L_NightRespArea~(1|Species/Pop),data = Sunflower_train)
summary(L_NightRespArea_mixed_model)
L_NightRespArea_mixed_model <- lmer(L_NightRespArea~(1|Species/Pop),data = Sunflower_train)
summary(L_NightRespArea_mixed_model)
L_NightRespmass_mixed_model <- lmer(L_NightRespmass~(1|Species/Pop),data = Sunflower_train)
summary(L_NightRespmass_mixed_model)
rm(list = ls())
options(scipen=999)
packages <- list("tidyverse","ggplot2","here","lme4","svglite")
lapply(packages, require,character.only=T)
Sunflower_train <- read_csv(here("Datasets and Tables","Sunflower_train.csv"))
### converting the population and the species column to factor
Sunflower_train <- Sunflower_train %>%
mutate_if(is.character,as.factor)
############ Leaf Trichome Density ####
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+14280+2475
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (14280/all_var_LTD) * 100
Residual_Ltd <- (2475/all_var_LTD) * 100
##### Leaf Circularity ####
L_Circ_mixed_model <- lmer(L_Circ ~ (1|Species/Pop),data = Sunflower_train)
summary(L_Circ_mixed_model)
all_var_L_Circ <- 0.0007089 + 0.0212218 + 0.0033679
Pop_L_Circ_var <- (0.0007089/all_var_L_Circ) * 100
Species_L_Circ_var <- (0.0212218/all_var_L_Circ) * 100
Residual_L_Circ <- (0.0033679/all_var_L_Circ) * 100
#### Leaf Area #####
L_Area_mixed_model <- lmer(LA~(1|Species/Pop),data = Sunflower_train)
summary(L_Area_mixed_model)
all_var_L_Area <- 84.42 + 727.19 + 412.04
Pop_L_Area_var <- (84.42/all_var_L_Area) * 100
Species_L_Area_var <- (727.19/all_var_L_Area) * 100
Residual_L_Area <- (412.04/all_var_L_Area) * 100
#### SPAD #####
L_SPAD_mixed_model <- lmer(SPAD~(1|Species/Pop),data = Sunflower_train)
summary(L_SPAD_mixed_model)
all_var_SPAD <- 2.097 + 22.247 + 18.530
Pop_SPAD_var <- (2.097/all_var_L_Area) * 100
Species_SPAD_var <- (22.247/all_var_L_Area) * 100
Residual_SPAD <- (18.530/all_var_L_Area) * 100
### Leaf Aarea
L_Aarea_mixed_model <- lmer(L_Aarea~(1|Species/Pop),data = Sunflower_train)
summary(L_Aarea_mixed_model)
all_var_Aarea <- 0.00 + 52.75 + 31.65
Pop_Aarea_var <- (0.00/all_var_L_Area) * 100
Species_Aarea_var <- (52.75/all_var_L_Area) * 100
Residual_Aarea <- (31.65/all_var_Aarea) * 100
##### Leaf Amass
L_Amass_mixed_model <- lmer(L_Amass~(1|Species/Pop),data = Sunflower_train)
summary(L_Amass_mixed_model)
all_var_Amass <- 0.00 + 25136 + 22194
Pop_Amass_var <- (0.00/all_var_Amass) * 100
Species_Amass_var <- (25136/all_var_Amass) * 100
Residual_Amass <- (22194/all_var_Amass) * 100
##### Leaf Conductivity
L_Con_mixed_model <- lmer(L_Con~(1|Species/Pop),data = Sunflower_train)
summary(L_Con_mixed_model)
all_var_LCon <- 0.00 + 0.11540 + 0.08629
Pop_Amass_var <- (0.00/all_var_LCon ) * 100
Species_Amass_var <- (0.11540/all_var_LCon ) * 100
Residual_Amass <- (0.08629/all_var_LCon ) * 100
### L_Ci
L_Ci_mixed_model <- lmer(L_Ci~(1|Species/Pop),data = Sunflower_train)
summary(L_Ci_mixed_model)
all_var_Ci <- 1.942 + 56.208 + 145.619
Pop_Ci_var <- (1.942/all_var_LCon ) * 100
Species_Ci_var <- (56.208/all_var_LCon ) * 100
Residual_Ci <- (145.619/all_var_LCon ) * 100
#### L_iWUE
L_iWUE_mixed_model <- lmer(L_iWUE~(1|Species/Pop),data = Sunflower_train)
summary(L_iWUE_mixed_model)
all_var_iWUE <- 0.1617 + 17.8804 + 46.1146
Pop_iWUE_var <- (0.1617/all_var_iWUE) * 100
Species_iWUE_var <- (17.8804/all_var_iWUE) * 100
Residual_iWUE <- (46.1146/all_var_iWUE) * 100
#### Leaf Night Respiration area ##
L_NightRespArea_mixed_model <- lmer(L_NightRespArea~(1|Species/Pop),data = Sunflower_train)
summary(L_NightRespArea_mixed_model)
all_var_NightRespArea <- 0.0000 + 0.1575 + 0.3410
Pop_NightRespArea_var <- (0.0000/all_var_iWUE) * 100
Species_NightRespArea_var <- (0.1575/all_var_iWUE) * 100
Residual_NightRespArea <- (0.3410/all_var_iWUE) * 100
L_NightRespmass_mixed_model <- lmer(L_NightRespmass~(1|Species/Pop),data = Sunflower_train)
summary(L_NightRespmass_mixed_model)
all_var_NightRespArea <- 0.000000000001875 + 52.015292685353423 + 176.172752212529900
Pop_NightRespArea_var <- (0.000000000001875/all_var_NightRespArea) * 100
Species_NightRespArea_var <- (52.015292685353423/all_var_NightRespArea) * 100
Residual_NightRespArea <- (176.172752212529900/all_var_NightRespArea) * 100
L_Peri_mixed_model <- lmer(L_Peri~(1|Species/Pop),data = Sunflower_train)
summary(L_Peri_mixed_model)
all_var_Peri <- 26.68 + 111.53 + 71.16
all_var_Peri <- 26.68 + 111.53 + 71.16
Pop_NightRespArea_var <- (26.68/all_var_Peri) * 100
Species_NightRespArea_var <- (111.53/all_var_Peri) * 100
Residual_NightRespArea <- (71.16/all_var_Peri) * 100
LS_mixed_model <- lmer(LS~(1|Species/Pop),data = Sunflower_train)
summary(LS_mixed_model)
LMA_mixed_model <- lmer(LMA~(1|Species/Pop),data = Sunflower_train)
summary(LMA_mixed_model)
L_FreshMass_mixed_model <- lmer(L_FreshMass~(1|Species/Pop),data = Sunflower_train)
summary(L_FreshMass_mixed_model)
L_FreshMass_mixed_model <- lmer(L_FreshMass~(1|Species/Pop),data = Sunflower_train)
summary(L_FreshMass_mixed_model)
L_FreshMass_mixed_model <- lmer(L_FreshMass~(1|Species/Pop),data = Sunflower_train)
summary(L_FreshMass_mixed_model)
L_DryMass_mixed_model <- lmer(L_DryMass~(1|Species/Pop),data = Sunflower_train)
summary(L_DryMass_mixed_model)
LWC_mixed_model <- lmer(LWC~(1|Species/Pop),data = Sunflower_train)
summary(LWC_mixed_model)
LDMC_mixed_model <- lmer(LDMC~(1|Species/Pop),data = Sunflower_train)
summary(LDMC_mixed_model)
LDMC_mixed_model <- lmer(LDMC~(1|Species/Pop),data = Sunflower_train)
summary(LDMC_mixed_model)
all_var_LDMC <- 0.00003954 + 0.00074027 + 0.00035721
Pop_LDMC_var <- (0.00003954/all_var_LDMC) * 100
Species_LDMC_var <- (0.00074027/all_var_LDMC) * 100
Residual_LDMC <- (0.00035721/all_var_LDMC) * 100
L_MidribT_mixed_model <- lmer(L_MidribT~(1|Species/Pop),data = Sunflower_train)
summary(L_MidribT_mixed_model)
L_LaminaT_mixed_model <- lmer(L_LaminaT~(1|Species/Pop),data = Sunflower_train)
summary(L_LaminaT_mixed_model)
L_LaminaT_mixed_model <- lmer(L_LaminaT~(1|Species/Pop),data = Sunflower_train)
summary(L_LaminaT_mixed_model)
all_var_L_LaminaT <- 0.003035 + 0.015346 + 0.008667
Pop_L_LaminaT_var <- (0.003035/all_var_MidribT) * 100
Species_L_LaminaT_var <- (0.015346/all_var_MidribT) * 100
L_LaminaT_mixed_model <- lmer(L_LaminaT~(1|Species/Pop),data = Sunflower_train)
summary(L_LaminaT_mixed_model)
all_var_L_LaminaT <- 0.003035 + 0.015346 + 0.008667
Pop_L_LaminaT_var <- (0.003035/all_var_L_LaminaT) * 100
Species_L_LaminaT_var <- (0.015346/all_var_L_LaminaT) * 100
Residual_L_LaminaT <- (0.008667/all_var_L_LaminaT) * 100
L_Tough_mixed_model <- lmer(L_Tough~(1|Species/Pop),data = Sunflower_train)
summary(L_Tough_mixed_model)
summary(L_Tough_mixed_model)
L_Tough_mixed_model <- lmer(L_Tough~(1|Species/Pop),data = Sunflower_train)
summary(L_Tough_mixed_model)
all_var_L_Tough <- 22.8 + 579.0  + 370.9
Pop_L_Toughness_var <- (22.8/all_var_L_Tough) * 100
Species_L_Toughness_var <- (579.0 /all_var_L_Tough) * 100
Residual_L_Toughness <- (370.9/all_var_L_Tough) * 100
L_lifespan_mixed_model <- lmer(L_life~(1|Species/Pop),data = Sunflower_train)
summary(L_lifespan_mixed_model)
LN_mixed_model <- lmer(LN~(1|Species/Pop),data = Sunflower_train)
summary(LN_mixed_model)
LN_mixed_model <- lmer(LN~(1|Species/Pop),data = Sunflower_train)
summary(LN_mixed_model)
LN_mixed_model <- lmer(LN~(1|Species/Pop),data = Sunflower_train)
summary(LN_mixed_model)
all_var_LN <- 0.04128 + 0.67143 + 0.51358
Pop_LN_var <- (0.04128/all_var_L_lifespan) * 100
Species_LN_var <- (0.67143/all_var_L_lifespan) * 100
Residual_LN <- (0.51358/all_var_L_lifespan) * 100
LN_mixed_model <- lmer(LN~(1|Species/Pop),data = Sunflower_train)
summary(LN_mixed_model)
all_var_LN <- 0.04128 + 0.67143 + 0.51358
LN_mixed_model <- lmer(LN~(1|Species/Pop),data = Sunflower_train)
summary(LN_mixed_model)
all_var_LN <- 0.04128 + 0.67143 + 0.51358
Pop_LN_var <- (0.04128/all_var_LN) * 100
Species_LN_var <- (0.67143/all_var_LN) * 100
Residual_LN <- (0.51358/all_var_LN) * 100
LD15C_mixed_model <- lmer(LD15C~(1|Species/Pop),data = Sunflower_train)
summary(LD15C_mixed_model)
all_var_LD15C <- 0.146 + 1.238 + 1.098
Pop_LD15C_var <- (0.146/all_var_LD15C) * 100
Species_LD15C_var <- (1.238/all_var_LD15C) * 100
Residual_LD15C <- (1.098/all_var_LD15C) * 100
LPNUE_mixed_model <- lmer(LPNUE~(1|Species/Pop),data = Sunflower_train)
summary(LPNUE_mixed_model)
LPNUE_mixed_model <- lmer(LPNUE~(1|Species/Pop),data = Sunflower_train)
summary(LPNUE_mixed_model)
all_var_LPNUE <- 1340118 + 2527541 + 28298380
Pop_LPNUE_var <- (1340118/all_var_LPNUE) * 100
Species_LPNUEC_var <- (2527541/all_var_LPNUE) * 100
Residual_LPNUE <- (28298380/all_var_LPNUE) * 100
LPNUE_mixed_model <- lmer(LPNUE~(1|Species/Pop),data = Sunflower_train)
summary(LPNUE_mixed_model)
all_var_LPNUE <- 1340118 + 2527541 + 28298380
Pop_LPNUE_var <- (1340118/all_var_LPNUE) * 100
Species_LPNUE_var <- (2527541/all_var_LPNUE) * 100
Residual_LPNUE <- (28298380/all_var_LPNUE) * 100
LC_mixed_model <- lmer(LC~(1|Species/Pop),data = Sunflower_train)
summary(LC_mixed_model)
LC_mixed_model <- lmer(LC~(1|Species/Pop),data = Sunflower_train)
summary(LC_mixed_model)
all_var_LC <- 0.4942 + 2.9651 + 3.9681
Pop_LC_var <- (0.4942/all_var_LC) * 100
Species_LC_var <- (2.9651/all_var_LC) * 100
Residual_LC <- (3.9681/all_var_LC) * 100
LC_mixed_model
class(LC_mixed_model)
summary(LC_mixed_model)
test <- summary(LC_mixed_model)
test
test$coefficients
test$residuals
test
test$varcor
test$vcov
test$methTitle
test$objClass
test$devcomp
test$isLmer
test$ngrps
test$coefficients
test
test$coefficients
test$sigma
test$coefficients
test$fitMsgs
ranef(LC_mixed_model)
library(nlme)
