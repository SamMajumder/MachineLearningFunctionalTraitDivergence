all_var_L_Area <- 98.53 + 772.62 + 376.84
Pop_L_Area_var <- (98.53/all_var_L_Area) * 100
Species_L_Area_var <- (772.62/all_var_L_Area) * 100
Variance_table <- data.frame(Traits = c("Leaf trichome density","Leaf trichome density",
"Leaf Circularity","Leaf Circularity",
"Leaf Area","Leaf Area"),
Groups = c("Species","Pop","Species","Pop",
"Species","Pop"))
Variances <- rbind(Species_Ltd_var,Pop_Ltd_var,
Species_L_Circ_var,Pop_L_Circ_var,
Species_L_Area_var,Pop_L_Area_var)
Variance_table <- cbind(Variance_table,Variances)
# Plot stack bar chart
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent")
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(axis.title = element_text(size = 7))
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(axis.title = element_text(size = 10))
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(text = element_text(size = 20))
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(text = element_text(size = 10))
ggsave("Estimated relative variation.svg",dpi = 300)
install.packages("svglite")
packages <- list("tidyverse","ggplot2","lme4","svglite")
lapply(packages, require,character.only=T)
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(text = element_text(size = 10))
ggsave("Estimated relative variation.svg",dpi = 300)
rm(list = ls())
packages <- list("tidyverse","caret","ggplot2","randomForest",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
##### ### Computing Variable Importance by GINI ###
set.seed(1234)
colnames(train_imputed)
Rf_genus <- randomForest(Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_genus)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI") +
theme(text = element_text(size = 10))
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI") +
theme(text = element_text(size = 10))
ggsave("Figure3a_Final.svg",dpi = 300)
write.csv(importance_by_gini,"Gini_Importance_Genus.csv",row.names = FALSE)
subsets <- c(1:71)
params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 10,
verbose = F)
set.seed(1234)
features_rfe_gini <- rfe(Species~.,data = train_imputed,
sizes=subsets,rfeControl=params_rfe)
rm(list = ls())
packages <- list("tidyverse","naniar","caret","ggplot2","randomForest","readxl",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
Perennials <- c("H_salicifolius","H_maximiliani","H_giganteus",
"H_verticillatus","H_grosseserratus","H_divaricatus",
"H_microcephalus","H_cusickii")
##### keeping only the annuals  ###
train_imputed <- train_imputed %>% filter(Species %in% Perennials)
test_imputed <- test_imputed %>% filter(Species %in% Perennials)
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
##### Computing Variable Importance by GINI ###
set.seed(1234)
Rf_perennials <- randomForest(train_imputed$Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_perennials)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI for Perennials") +
theme(text = element_text(size = 10))
ggsave("Figure3b_Final.svg",dpi = 300)
rm(list = ls())
rm(list = ls())
packages <- list("tidyverse","naniar","ggplot2","randomForest","caret","readxl")
lapply(packages, require,character.only=T)
Sunflower_traits <- read_excel("CombinedTraitDataset_ForSam_12.20.20.xlsx")
colnames(Sunflower_traits)
Sunflower_traits <- Sunflower_traits %>%
dplyr::select(-c(Year,PlantID,Block,Number))
New_names <- c("Species","Pop","SPAD","L_Aarea","L_Amass","L_Con","L_Ci",
"L_iWUE","L_NightRespArea","L_NightRespmass","LA",
"L_Peri","L_Circ","LS","LMA","L_FreshMass","L_DryMass",
"LWC","LDMC","L_MidribT","L_LaminaT","L_Tough","L_life",
"LN","LD15C","LPNUE","LC","LD13C","LCN","LP","Leaf_N_P",
"L_VeinD","L_T_activity","LTD","L_LipidC","L_AshC","WPTB",
"WPBMF","WPSMF","WPLMF","WPRMF","WPFB","WPFF","FPFM","FDFM",
"FRFM","FTFM","FPDM","FDDM","FRDM","FTDM","FPWC","FDWC","FRWC",
"FTWC","P_D","P_T","D_T","R_T","FRL","FRW","FDD","FDC","FTD",
"FTC","FTA","FDA","FPA","FRN","FPD","FAIR","FPAF","FDAF")
Old_names <- colnames(Sunflower_traits)
Sunflower_traits <- Sunflower_traits %>% rename_at(vars(Old_names), ~ New_names)
Sunflower_traits$Species <- gsub(". ","_",Sunflower_traits$Species)
Sunflower_traits[Sunflower_traits == "."] <- NA
total_cells <- prod(dim(Sunflower_traits %>% select(-Species)))
missing_cells <- sum(is.na(Sunflower_traits %>% select(-Species)))
# calculating percentage of missing values
percentage_missing <- (missing_cells * 100 )/(total_cells)
percentage_missing
gg_miss_var(Sunflower_traits)
Sunflower_traits$Species <- factor(Sunflower_traits$Species)
Sunflower_traits$Pop <- factor(Sunflower_traits$Pop)
Sunflower_traits <- Sunflower_traits %>%
mutate_if(is.character,as.numeric)
gg_miss_var(Sunflower_traits)
ggsave("Figure S1.svg",dpi=300)
Sunflower_traits$Species <- factor(Sunflower_traits$Species)
Sunflower_traits$Pop <- factor(Sunflower_traits$Pop)
Sunflower_traits <- Sunflower_traits %>%
mutate_if(is.character,as.numeric)
s <- createDataPartition(y=Sunflower_traits$Species, p=0.70, list = F)
train <- Sunflower_traits[s,]
test <- Sunflower_traits[-s,]
pop_train <- data.frame(Pop = train$Pop)
train <- train %>% dplyr::select(-Pop)
test <- test %>% dplyr::select(-Pop)
### Now impute using random forest ###
set.seed(1234)
train_imputed <- rfImpute(Species~.,train)
set.seed(1234)
test_imputed <- rfImpute(Species~.,test)
write.csv(train_imputed,"train_imputed.csv",row.names = FALSE)
write.csv(test_imputed,"test_imputed.csv",row.names=FALSE)
Sunflower_train <- data.frame(Pop = pop_train$Pop,
train_imputed)
write.csv(Sunflower_train,"Sunflower_train.csv",row.names = FALSE)
rm(list = ls())
packages <- list("tidyverse","ggplot2","lme4","svglite")
lapply(packages, require,character.only=T)
Sunflower_train <- read.csv("Sunflower_train.csv")
Sunflower_train <- Sunflower_train %>%
mutate_if(is.character,as.factor)
LTD_mixed_model <- lmer(LTD~ (1|Species/Pop),data = Sunflower_train)
L_Circ_mixed_model <- lmer(L_Circ ~ (1|Species/Pop),data = Sunflower_train)
L_Area_mixed_model <- lmer(LA~(1|Species/Pop),data = Sunflower_train)
summary(LTD_mixed_model)
all_var_LTD <- 0+16274+2276
Pop_Ltd_var <- (0/all_var_LTD) * 100
Species_Ltd_var <- (16274/all_var_LTD) * 100
summary(L_Circ_mixed_model)
all_var_L_Circ <- 0.0007041+0.0214819+0.0030185
Pop_L_Circ_var <- (0.0007041/all_var_L_Circ) * 100
Species_L_Circ_var <- (0.0214819/all_var_L_Circ) * 100
summary(L_Area_mixed_model)
all_var_L_Area <- 98.53 + 772.62 + 376.84
Pop_L_Area_var <- (98.53/all_var_L_Area) * 100
Species_L_Area_var <- (772.62/all_var_L_Area) * 100
Variance_table <- data.frame(Traits = c("Leaf trichome density","Leaf trichome density",
"Leaf Circularity","Leaf Circularity",
"Leaf Area","Leaf Area"),
Groups = c("Species","Pop","Species","Pop",
"Species","Pop"))
Variances <- rbind(Species_Ltd_var,Pop_Ltd_var,
Species_L_Circ_var,Pop_L_Circ_var,
Species_L_Area_var,Pop_L_Area_var)
Variance_table <- cbind(Variance_table,Variances)
ggplot(Variance_table, aes(fill=Groups, y=Variances, x=Traits)) +
geom_bar(position='stack', stat='identity') +
labs(x = "Traits", y = "Estimated relative Variance (%)") +
ggtitle("Estimated relative variation in percent") +
theme(text = element_text(size = 10))
ggsave("Figure S2.svg",dpi = 300)
rm(list = ls())
packages <- list("tidyverse","caret","ggplot2","randomForest",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
##### ### Computing Variable Importance by GINI ###
set.seed(1234)
colnames(train_imputed)
Rf_genus <- randomForest(Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_genus)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI") +
theme(text = element_text(size = 10))
ggsave("Figure 3a.svg",dpi = 300)
write.csv(importance_by_gini,"Gini_Importance_Genus.csv",row.names = FALSE)
subsets <- c(1:71)
params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 10,
verbose = F)
set.seed(1234)
features_rfe_gini <- rfe(Species~.,data = train_imputed,
sizes=subsets,rfeControl=params_rfe)
## variation of accuracy with the removal of variables ###
features_rfe_gini
optimal_subset_rfe_genus <- data.frame(Features = predictors(features_rfe_gini))
optimal_subset_rfe_genus
Rfe_Imp_Genus <- data.frame(varImp(features_rfe_gini))
Rfe_Imp_Genus <- data.frame(Features = rownames(Rfe_Imp_Genus),
Overall = Rfe_Imp_Genus$Overall)
Rfe_Imp_Genus_best_subset <- Rfe_Imp_Genus %>%
dplyr::filter(Features %in% optimal_subset_rfe_genus$Features)
### plotting the variation of accuracy with the removal of variables
ggplot(features_rfe_gini)
ggplot(data = Rfe_Imp_Genus_best_subset,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Optimal subset of features") +
theme(text = element_text(size = 10))
ggsave("Figure 4a.svg",dpi = 300)
write.csv(Rfe_Imp_Genus_best_subset,"Rfe_Genus_best_subset.csv",row.names = FALSE)
train_optimal <- train_imputed %>%
dplyr::select(Species,optimal_subset_rfe_genus$Features)
test_optimal <- test_imputed %>%
dplyr::select(Species,optimal_subset_rfe_genus$Features)
Boruta_genus <- Boruta(Species ~., train_optimal)
Boruta_genus
Boruta_feature_analysis <- data.frame(attStats(Boruta_genus))
Boruta_feature_analysis$Feature <- rownames(Boruta_feature_analysis)
Boruta_feature_analysis <- Boruta_feature_analysis %>%
dplyr::filter(decision == "Confirmed")
colnames(Boruta_feature_analysis)
ggplot(data = Boruta_feature_analysis,
aes(x=reorder(Feature,meanImp), y = meanImp, fill = Feature)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Strongly important variables") +
theme(text = element_text(size = 10))
ggsave("Figure 5a.svg",dpi = 300)
write.csv(Boruta_feature_analysis,"Boruta_Genus.csv",row.names = FALSE)
rm(list = ls())
packages <- list("tidyverse","naniar","caret","ggplot2","randomForest","readxl",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
Perennials <- c("H_salicifolius","H_maximiliani","H_giganteus",
"H_verticillatus","H_grosseserratus","H_divaricatus",
"H_microcephalus","H_cusickii")
##### keeping only the annuals  ###
train_imputed <- train_imputed %>% filter(Species %in% Perennials)
test_imputed <- test_imputed %>% filter(Species %in% Perennials)
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
##### Computing Variable Importance by GINI ###
set.seed(1234)
Rf_perennials <- randomForest(train_imputed$Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_perennials)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI for Perennials") +
theme(text = element_text(size = 10))
ggsave("Figure 3b.svg",dpi = 300)
write.csv(importance_by_gini,"Gini_Importance_Perennials.csv",row.names = FALSE)
subsets <- c(1:71)
params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 10,
verbose = F)
set.seed(1234)
features_rfe_gini <- rfe(Species~.,data = train_imputed,
sizes=subsets,rfeControl=params_rfe)
## variation of accuracy with the removal of variables ###
features_rfe_gini
optimal_subset_rfe_perennials <- data.frame(Features = predictors(features_rfe_gini))
optimal_subset_rfe_perennials
Rfe_Imp_Perennial <- data.frame(varImp(features_rfe_gini))
Rfe_Imp_Perennial <- data.frame(Features = rownames(Rfe_Imp_Perennial),
Overall = Rfe_Imp_Perennial$Overall)
Rfe_Imp_Perennial_best_subset <- Rfe_Imp_Perennial %>%
dplyr::filter(Features %in% optimal_subset_rfe_perennials$Features)
### plotting the variation of accuracy with the removal of variables
ggplot(features_rfe_gini)
ggplot(data = Rfe_Imp_Perennial_best_subset,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Optimal subset of features for Perennial") +
theme(text = element_text(size = 10))
ggsave("Figure 4b.svg",dpi = 300)
write.csv(Rfe_Imp_Perennial_best_subset,"Rfe_Perennial_best_subset.csv",row.names = FALSE)
train_optimal <- train_imputed %>%
dplyr::select(Species,optimal_subset_rfe_perennials$Features)
test_optimal <- test_imputed %>%
dplyr::select(Species,optimal_subset_rfe_perennials$Features)
Boruta_perennial <- Boruta(Species ~., train_optimal)
Boruta_feature_analysis <- data.frame(attStats(Boruta_perennial))
Boruta_feature_analysis$Feature <- rownames(Boruta_feature_analysis)
Boruta_feature_analysis <- Boruta_feature_analysis %>%
dplyr::filter(decision == "Confirmed")
colnames(Boruta_feature_analysis)
ggplot(data = Boruta_feature_analysis,
aes(x=reorder(Feature,meanImp), y = meanImp, fill = Feature)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Strongly important variables for Perennials") +
theme(text = element_text(size = 10))
ggsave("Figure 5b.svg",dpi = 300)
write.csv(Boruta_feature_analysis,"Boruta_Perennials.csv",row.names = FALSE)
rm(list = ls())
packages <- list("tidyverse","naniar","caret","ggplot2","randomForest","readxl",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
Annuals <- c("H_praeco_ssp_runyonii","H_debili_ssp_tardiflorus",
"H_neglectus","H_petiolari_ssp_petiolaris",
"H_niveu_ssp_tephrodes","H_annuus","H_argophyllus")
##### keeping only the annuals  ###
train_imputed <- train_imputed %>% filter(Species %in% Annuals)
test_imputed <- test_imputed %>% filter(Species %in% Annuals)
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
##### ### Computing Variable Importance by GINI ###
set.seed(1234)
Rf_annuals <- randomForest(train_imputed$Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_annuals)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI for Annuals") +
theme(text = element_text(size = 10))
ggsave("Figure 3c.svg",dpi = 300)
write.csv(importance_by_gini,"Gini_Importance_Annual.csv",row.names = FALSE)
subsets <- c(1:71)
params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 10,
verbose = F)
set.seed(1234)
features_rfe_gini <- rfe(Species~.,data = train_imputed,
sizes=subsets,rfeControl=params_rfe)
## variation of accuracy with the removal of variables ###
features_rfe_gini
optimal_subset_rfe_annual <- data.frame(Features = predictors(features_rfe_gini))
optimal_subset_rfe_annual
Rfe_Imp_Annual <- data.frame(varImp(features_rfe_gini))
Rfe_Imp_Annual <- data.frame(Features = rownames(Rfe_Imp_Annual),
Overall = Rfe_Imp_Annual$Overall)
Rfe_Imp_Annual_best_subset <- Rfe_Imp_Annual %>%
dplyr::filter(Features %in% optimal_subset_rfe_annual$Features)
### plotting the variation of accuracy with the removal of variables
ggplot(features_rfe_gini)
ggplot(data = Rfe_Imp_Annual_best_subset,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Optimal subset of features for Annuals") +
theme(text = element_text(size = 10))
ggsave("Figure 4c.svg",dpi = 300)
write.csv(Rfe_Imp_Annual_best_subset,"Rfe_Annual_best_subset.csv",row.names = FALSE)
train_optimal <- train_imputed %>%
dplyr::select(Species,optimal_subset_rfe_annual$Features)
test_optimal <- test_imputed %>%
dplyr::select(Species,optimal_subset_rfe_annual$Features)
Boruta_annual <- Boruta(Species ~., train_optimal)
Boruta_feature_analysis <- data.frame(attStats(Boruta_annual))
Boruta_feature_analysis$Feature <- rownames(Boruta_feature_analysis)
Boruta_feature_analysis <- Boruta_feature_analysis %>%
dplyr::filter(decision == "Confirmed")
colnames(Boruta_feature_analysis)
ggplot(data = Boruta_feature_analysis,
aes(x=reorder(Feature,meanImp), y = meanImp, fill = Feature)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Strongly important variables for Annuals") +
theme(text = element_text(size = 10))
ggsave("Figure 5c.svg",dpi = 300)
write.csv(Boruta_feature_analysis,"Boruta_Annual.csv",row.names = FALSE)
rm(list = ls())
packages <- list("tidyverse","naniar","caret","ggplot2","randomForest","readxl",
"plotly","Boruta","htmlwidgets")
lapply(packages, require,character.only=T)
train_imputed <- read.csv("train_imputed.csv")
test_imputed <- read.csv("test_imputed.csv")
Southeastern_perennials <- c("H_carnosus","H_atrorubens","H_radula",
"H_silphioides","H_floridanus","H_heterophyllus",
"H_longifolius","H_angustifolius")
##### keeping only the Southeastern perennials  ###
train_imputed <- train_imputed %>% filter(Species %in% Southeastern_perennials)
test_imputed <- test_imputed %>% filter(Species %in% Southeastern_perennials)
train_imputed$Species <- factor(train_imputed$Species)
test_imputed$Species <- factor(test_imputed$Species)
######## Computing Variable Importance by GINI ###
set.seed(1234)
Rf_southeastern <- randomForest(train_imputed$Species~.,data = train_imputed)
importance_by_gini <- varImp(Rf_southeastern)
importance_by_gini <- data.frame(Features = row.names(importance_by_gini),
Overall = importance_by_gini$Overall)
ggplot(data = importance_by_gini,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Importance of each Variable as per GINI for Southeastern Perennials") +
theme(text = element_text(size = 10))
ggsave("Figure 3d.svg",dpi = 300)
write.csv(importance_by_gini,"Gini_Importance_southeastern.csv",row.names = FALSE)
subsets <- c(1:71)
params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 10,
verbose = F)
set.seed(1234)
features_rfe_gini <- rfe(Species~.,data = train_imputed,
sizes=subsets,rfeControl=params_rfe)
## variation of accuracy with the removal of variables ###
features_rfe_gini
optimal_subset_rfe_southeastern <- data.frame(Features = predictors(features_rfe_gini))
optimal_subset_rfe_southeastern
Rfe_Imp_southeastern <- data.frame(varImp(features_rfe_gini))
Rfe_Imp_southeastern <- data.frame(Features = rownames(Rfe_Imp_southeastern),
Overall = Rfe_Imp_southeastern$Overall)
Rfe_Imp_southeastern_best_subset <- Rfe_Imp_southeastern %>%
dplyr::filter(Features %in% optimal_subset_rfe_southeastern$Features)
### plotting the variation of accuracy with the removal of variables
ggplot(features_rfe_gini)
### plotting the variation of accuracy with the removal of variables
ggplot(features_rfe_gini)
ggplot(data = Rfe_Imp_southeastern_best_subset,
aes(x=reorder(Features,Overall), y = Overall, fill = Features)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Optimal subset of features for southeastern perennial") +
theme(text = element_text(size = 10))
ggsave("Figure 4d.svg",dpi = 300)
write.csv(Rfe_Imp_southeastern_best_subset,"Rfe_southeastern_best_subset.csv",row.names = FALSE)
train_optimal <- train_imputed %>%
dplyr::select(Species,optimal_subset_rfe_southeastern$Features)
test_optimal <- test_imputed %>%
dplyr::select(Species,optimal_subset_rfe_southeastern$Features)
Boruta_southeastern <- Boruta(Species ~., train_optimal)
Boruta_feature_analysis <- data.frame(attStats(Boruta_southeastern))
Boruta_feature_analysis$Feature <- rownames(Boruta_feature_analysis)
Boruta_feature_analysis <- Boruta_feature_analysis %>%
dplyr::filter(decision == "Confirmed")
colnames(Boruta_feature_analysis)
colnames(Boruta_feature_analysis)
ggplot(data = Boruta_feature_analysis,
aes(x=reorder(Feature,meanImp), y = meanImp, fill = Feature)) +
geom_bar(stat = "identity") + labs(x= "Features", y= "Variable Importance") +
coord_flip() +
theme_bw() + theme(legend.position = "none") +
ggtitle("Strongly important variables for southeastern perennials") +
theme(text = element_text(size = 10))
ggsave("Figure 5d.svg",dpi = 300)
write.csv(Boruta_feature_analysis,"Boruta_southeastern_perennials.csv",row.names = FALSE)
rm(list = ls())
library(knitr)
spin("Data_preparation.R")
spin("Variance_Partitioning.R")
spin("Data_Analysis_Genus.R")
rm(list=ls())
library(knitr)
spin("Data_Analysis_Perennials.R")
rm(list=ls())
library(knitr)
spin("Data_Analysis_Annuals.R")
rm(list=ls())
library(knitr)
spin("Data_Analysis_Southeastern.R")
rm(list=ls())
